{"status":"success","errors":null,"data":{"valid":true,"metadata":{"variables":["S_w_l","S_w_h","I_w_l","I_w_h","S_m_l","S_m_h","I_m_l","I_m_h","PopSize","prevalence_w","prevalence_m","prevalence_w_l","prevalence_m_l","prevalence_f_h","prevalence_m_h","prevalence_tot","cLow","cHigh"],"parameters":[{"name":"betaMW_2c","default":0.5,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"betaWM_2c","default":0.5,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"DurInf_2c","default":0.5,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"Epsilon","default":1,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"pcr_2c","default":2,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"propHighRisk","default":0.2,"min":null,"max":null,"is_integer":false,"rank":0},{"name":"RatioHL","default":25,"min":null,"max":null,"is_integer":false,"rank":0}],"dt":null,"messages":[]},"model":"\"use strict\";\nclass odin {\n  constructor(base, user, unusedUserAction) {\n    this.base = base;\n    this.internal = {};\n    var internal = this.internal;\n    internal.mix_assort_hh = 1;\n    internal.mix_assort_hl = 0;\n    internal.mix_assort_lh = 0;\n    internal.mix_assort_ll = 1;\n    this.setUser(user, unusedUserAction);\n  }\n  initial(t) {\n    var internal = this.internal;\n    var state = Array(8).fill(0);\n    state[0] = internal.initial_S_w_l;\n    state[1] = internal.initial_S_w_h;\n    state[2] = internal.initial_I_w_l;\n    state[3] = internal.initial_I_w_h;\n    state[4] = internal.initial_S_m_l;\n    state[5] = internal.initial_S_m_h;\n    state[6] = internal.initial_I_m_l;\n    state[7] = internal.initial_I_m_h;\n    return state;\n  }\n  setUser(user, unusedUserAction) {\n    this.base.user.checkUser(user, [\"betaMW_2c\", \"betaWM_2c\", \"DurInf_2c\", \"Epsilon\", \"pcr_2c\", \"propHighRisk\", \"RatioHL\"], unusedUserAction);\n    var internal = this.internal;\n    this.base.user.setUserScalar(user, \"betaMW_2c\", internal, 0.5, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"betaWM_2c\", internal, 0.5, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"DurInf_2c\", internal, 0.5, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"Epsilon\", internal, 1, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"pcr_2c\", internal, 2, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"propHighRisk\", internal, 0.20000000000000001, -Infinity, Infinity, false);\n    this.base.user.setUserScalar(user, \"RatioHL\", internal, 25, -Infinity, Infinity, false);\n    internal.initial_I_m_h = 100000 * internal.propHighRisk * 0.001;\n    internal.initial_I_m_l = 100000 * (1 - internal.propHighRisk) * 0.001;\n    internal.initial_I_w_h = 100000 * internal.propHighRisk * 0.001;\n    internal.initial_I_w_l = 100000 * (1 - internal.propHighRisk) * 0.001;\n    internal.initial_S_m_h = 100000 * internal.propHighRisk * 0.999;\n    internal.initial_S_m_l = 100000 * (1 - internal.propHighRisk) * 0.999;\n    internal.initial_S_w_h = 100000 * internal.propHighRisk * 0.999;\n    internal.initial_S_w_l = 100000 * (1 - internal.propHighRisk) * 0.999;\n    internal.pcr_2c_l = internal.pcr_2c / (internal.RatioHL * internal.propHighRisk + (1 - internal.propHighRisk));\n    internal.recovery_2c = 1 / internal.DurInf_2c;\n    internal.mix_random_hl = internal.pcr_2c_l * (1 - internal.propHighRisk) / internal.pcr_2c;\n    internal.mix_random_ll = internal.pcr_2c_l * (1 - internal.propHighRisk) / internal.pcr_2c;\n    internal.pcr_2c_h = internal.pcr_2c_l * internal.RatioHL;\n    internal.mix_final_hl = internal.Epsilon * internal.mix_random_hl + (1 - internal.Epsilon) * internal.mix_assort_hl;\n    internal.mix_final_ll = internal.Epsilon * internal.mix_random_ll + (1 - internal.Epsilon) * internal.mix_assort_ll;\n    internal.mix_random_hh = internal.pcr_2c_h * internal.propHighRisk / internal.pcr_2c;\n    internal.mix_random_lh = internal.pcr_2c_h * internal.propHighRisk / internal.pcr_2c;\n    internal.mix_final_hh = internal.Epsilon * internal.mix_random_hh + (1 - internal.Epsilon) * internal.mix_assort_hh;\n    internal.mix_final_lh = internal.Epsilon * internal.mix_random_lh + (1 - internal.Epsilon) * internal.mix_assort_lh;\n    this.updateMetadata();\n  }\n  getInternal() {\n    return this.internal;\n  }\n  rhs(t, state, dstatedt) {\n    var internal = this.internal;\n    const S_w_l = state[0];\n    const S_w_h = state[1];\n    const S_m_l = state[4];\n    const S_m_h = state[5];\n    const I_w_l = state[2];\n    const I_w_h = state[3];\n    const I_m_l = state[6];\n    const I_m_h = state[7];\n    var FOI_m_h = internal.betaWM_2c * internal.pcr_2c_h * (internal.mix_final_hl * (I_w_l / (S_w_l + I_w_l)) + (internal.mix_final_hh * (I_w_h / (S_w_h + I_w_h))));\n    var FOI_m_l = internal.betaWM_2c * internal.pcr_2c_l * (internal.mix_final_ll * (I_w_l / (S_w_l + I_w_l)) + (internal.mix_final_lh * (I_w_h / (S_w_h + I_w_h))));\n    var FOI_w_h = internal.betaMW_2c * internal.pcr_2c_h * (internal.mix_final_hl * (I_m_l / (S_m_l + I_m_l)) + (internal.mix_final_hh * (I_m_h / (S_m_h + I_m_h))));\n    var FOI_w_l = internal.betaMW_2c * internal.pcr_2c_l * (internal.mix_final_ll * (I_m_l / (S_m_l + I_m_l)) + (internal.mix_final_lh * (I_m_h / (S_m_h + I_m_h))));\n    dstatedt[7] = FOI_m_h * S_m_h - internal.recovery_2c * I_m_h;\n    dstatedt[6] = FOI_m_l * S_m_l - internal.recovery_2c * I_m_l;\n    dstatedt[3] = FOI_w_h * S_w_h - internal.recovery_2c * I_w_h;\n    dstatedt[2] = FOI_w_l * S_w_l - internal.recovery_2c * I_w_l;\n    dstatedt[5] = - FOI_m_h * S_m_h + internal.recovery_2c * I_m_h;\n    dstatedt[4] = - FOI_m_l * S_m_l + internal.recovery_2c * I_m_l;\n    dstatedt[1] = - FOI_w_h * S_w_h + internal.recovery_2c * I_w_h;\n    dstatedt[0] = - FOI_w_l * S_w_l + internal.recovery_2c * I_w_l;\n  }\n  output(t, state) {\n    var internal = this.internal;\n    var output = new Array(10);\n    const S_w_l = state[0];\n    const S_w_h = state[1];\n    const S_m_l = state[4];\n    const S_m_h = state[5];\n    const I_w_l = state[2];\n    const I_w_h = state[3];\n    const I_m_l = state[6];\n    const I_m_h = state[7];\n    var I_m = I_m_l + I_m_h;\n    var I_w = I_w_l + I_w_h;\n    var N_m = S_m_l + I_m_l + S_m_h + I_m_h;\n    var N_w = S_w_l + I_w_l + S_w_h + I_w_h;\n    output[8] = internal.pcr_2c / (internal.RatioHL * internal.propHighRisk + (1 - internal.propHighRisk));\n    output[5] = I_w_h / (I_w_h + S_w_h);\n    output[6] = I_m_h / (I_m_h + S_m_h);\n    output[4] = I_m_l / (I_m_l + S_m_l);\n    output[3] = I_w_l / (I_w_l + S_w_l);\n    var N_tot = N_w + N_m;\n    output[9] = internal.pcr_2c_l * internal.RatioHL;\n    output[0] = N_w + N_m;\n    output[2] = I_m / N_m;\n    output[1] = I_w / N_w;\n    output[7] = (I_w + I_m) / N_tot;\n    return output;\n  }\n  names() {\n    return this.metadata.ynames.slice(1);\n  }\n  updateMetadata() {\n    this.metadata = {};\n    var internal = this.internal;\n    this.metadata.ynames = [\"t\", \"S_w_l\", \"S_w_h\", \"I_w_l\", \"I_w_h\", \"S_m_l\", \"S_m_h\", \"I_m_l\", \"I_m_h\", \"PopSize\", \"prevalence_w\", \"prevalence_m\", \"prevalence_w_l\", \"prevalence_m_l\", \"prevalence_f_h\", \"prevalence_m_h\", \"prevalence_tot\", \"cLow\", \"cHigh\"];\n    this.metadata.internalOrder = {betaMW_2c: null, betaWM_2c: null, DurInf_2c: null, Epsilon: null, initial_I_m_h: null, initial_I_m_l: null, initial_I_w_h: null, initial_I_w_l: null, initial_S_m_h: null, initial_S_m_l: null, initial_S_w_h: null, initial_S_w_l: null, mix_assort_hh: null, mix_assort_hl: null, mix_assort_lh: null, mix_assort_ll: null, mix_final_hh: null, mix_final_hl: null, mix_final_lh: null, mix_final_ll: null, mix_random_hh: null, mix_random_hl: null, mix_random_lh: null, mix_random_ll: null, pcr_2c: null, pcr_2c_h: null, pcr_2c_l: null, propHighRisk: null, RatioHL: null, recovery_2c: null};\n    this.metadata.variableOrder = {S_w_l: null, S_w_h: null, I_w_l: null, I_w_h: null, S_m_l: null, S_m_h: null, I_m_l: null, I_m_h: null};\n    this.metadata.outputOrder = {PopSize: null, prevalence_w: null, prevalence_m: null, prevalence_w_l: null, prevalence_m_l: null, prevalence_f_h: null, prevalence_m_h: null, prevalence_tot: null, cLow: null, cHigh: null};\n  }\n  getMetadata() {\n    return this.metadata;\n  }\n}\nodin;"}}